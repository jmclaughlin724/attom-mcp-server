openapi: 3.1.0
info:
  title: ATTOM MCP API
  version: 1.0.0
  description: OpenAPI schema for ATTOM MCP server
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: apikey
      description: API key for ATTOM Data Solutions API
  schemas: {}
  parameters: {}
paths:
  /propertyapi/v1.0.0/property/basicprofile:
    get:
      summary: Get property basic profile by ID or fallback from address
      description: Returns basic property information including address, owner, and
        basic building characteristics.
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Property basic profile data
          content:
            application/json:
              schema:
                description: BasicProfileResponse
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties: {}
                description: ErrorResponse
        "401":
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                type: object
                properties: {}
                description: ErrorResponse
        "404":
          description: Not Found - Property not found
          content:
            application/json:
              schema:
                type: object
                properties: {}
                description: ErrorResponse
        "429":
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                type: object
                properties: {}
                description: ErrorResponse
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties: {}
                description: ErrorResponse
  /property/v2/salescomparables/address/{street}/{city}/{county}/{state}/{zip}:
    get:
      summary: Comparable sales for an address-based path
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: true
          name: street
          in: path
        - schema:
            type: string
          required: true
          name: city
          in: path
        - schema:
            type: string
          required: true
          name: county
          in: path
        - schema:
            type: string
          required: true
          name: state
          in: path
        - schema:
            type: string
          required: true
          name: zip
          in: path
        - schema:
            type: string
          required: false
          name: searchType
          in: query
        - schema:
            type: number
          required: false
          name: minComps
          in: query
        - schema:
            type: number
          required: false
          name: maxComps
          in: query
        - schema:
            type: number
          required: false
          name: miles
          in: query
        - schema:
            type: boolean
          required: false
          name: sameCity
          in: query
        - schema:
            type: boolean
          required: false
          name: useSameTargetCode
          in: query
        - schema:
            type: number
          required: false
          name: bedroomsRange
          in: query
        - schema:
            type: number
          required: false
          name: bathroomRange
          in: query
        - schema:
            type: number
          required: false
          name: sqFeetRange
          in: query
        - schema:
            type: number
          required: false
          name: lotSizeRange
          in: query
        - schema:
            type: number
          required: false
          name: saleDateRange
          in: query
        - schema:
            type: number
          required: false
          name: yearBuiltRange
          in: query
        - schema:
            type: string
          required: false
          name: ownerOccupied
          in: query
        - schema:
            type: string
          required: false
          name: distressed
          in: query
      responses:
        "200":
          description: Comparable sales data
          content:
            application/json:
              schema:
                description: SalesComparablesAddressResp
  /property/v2/salescomparables/propid/{propId}:
    get:
      summary: Comparable sales for a property by propId (fallback from address =>
        attomId => propId). Additional query params accepted.
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: true
          name: propId
          in: path
        - schema:
            type: string
          required: false
          name: searchType
          in: query
        - schema:
            type: number
          required: false
          name: minComps
          in: query
        - schema:
            type: number
          required: false
          name: maxComps
          in: query
        - schema:
            type: number
          required: false
          name: miles
          in: query
        - schema:
            type: boolean
          required: false
          name: sameCity
          in: query
        - schema:
            type: boolean
          required: false
          name: useSameTargetCode
          in: query
        - schema:
            type: number
          required: false
          name: bedroomsRange
          in: query
        - schema:
            type: number
          required: false
          name: bathroomRange
          in: query
        - schema:
            type: number
          required: false
          name: sqFeetRange
          in: query
        - schema:
            type: number
          required: false
          name: lotSizeRange
          in: query
        - schema:
            type: number
          required: false
          name: saleDateRange
          in: query
        - schema:
            type: number
          required: false
          name: yearBuiltRange
          in: query
        - schema:
            type: string
          required: false
          name: ownerOccupied
          in: query
        - schema:
            type: string
          required: false
          name: distressed
          in: query
      responses:
        "200":
          description: Comparable sales data
          content:
            application/json:
              schema:
                description: SalesComparablesPropidResp
  /v4/neighborhood/community:
    get:
      summary: Community profile for geoIdV4 or fallback from address => N2 etc.
      tags:
        - Community
      parameters:
        - schema:
            type: string
          required: false
          name: geoIdV4
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Community profile data
          content:
            application/json:
              schema:
                description: CommunityProfileResponse
  /v4/school/profile:
    get:
      summary: School profile for a given SB geoIdV4 or fallback from address =>
        property => SB code
      tags:
        - School
      parameters:
        - schema:
            type: string
          required: false
          name: geoIdV4
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: School profile data
          content:
            application/json:
              schema:
                description: SchoolProfileResponse
  /v4/school/search:
    get:
      summary: School search by geoIdV4 or fallback from address => N2 code, plus
        radius/paging.
      tags:
        - School
      parameters:
        - schema:
            type: string
          required: false
          name: geoIdV4
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
        - schema:
            type: number
          required: false
          name: radius
          in: query
        - schema:
            type: number
          required: false
          name: page
          in: query
        - schema:
            type: number
          required: false
          name: pageSize
          in: query
      responses:
        "200":
          description: School search data
          content:
            application/json:
              schema:
                description: SchoolSearchResponse
  /v4/neighborhood/poi:
    get:
      summary: Points of interest near an address, zip, or lat/lon point
      tags:
        - POI
      parameters:
        - schema:
            type: string
          required: false
          name: address
          in: query
        - schema:
            type: string
          required: false
          name: zipcode
          in: query
        - schema:
            type: string
          required: false
          name: point
          in: query
        - schema:
            type: number
          required: false
          name: radius
          in: query
        - schema:
            type: string
          required: false
          name: categoryName
          in: query
        - schema:
            type: number
          required: false
          name: recordLimit
          in: query
      responses:
        "200":
          description: Points of interest data
          content:
            application/json:
              schema:
                description: PoiSearchResponse
  /propertyapi/v1.0.0/property/buildingpermits:
    get:
      summary: Get property building permits
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Property building permits data
          content:
            application/json:
              schema:
                description: BuildingPermitsResponse
  /propertyapi/v1.0.0/property/detailowner:
    get:
      summary: Property detail with owner info
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Property detail owner data
          content:
            application/json:
              schema:
                description: DetailOwnerResponse
  /propertyapi/v1.0.0/property/detailmortgage:
    get:
      summary: Property detail with mortgage info
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Property detail mortgage data
          content:
            application/json:
              schema:
                description: DetailMortgageResponse
  /propertyapi/v1.0.0/property/detailmortgageowner:
    get:
      summary: Property detail with mortgage + owner info
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Property detail mortgage owner data
          content:
            application/json:
              schema:
                description: DetailMortgageOwnerResponse
  /propertyapi/v1.0.0/attomavm/detail:
    get:
      summary: AVM detail for a property
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: AVM detail data
          content:
            application/json:
              schema:
                description: AttomAvmResponse
  /propertyapi/v1.0.0/valuation/homeequity:
    get:
      summary: Estimated home equity for a property
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Home equity data
          content:
            application/json:
              schema:
                description: HomeEquityResponse
  /propertyapi/v1.0.0/valuation/rentalavm:
    get:
      summary: Rental AVM for a property
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Rental AVM data
          content:
            application/json:
              schema:
                description: RentalAvmResponse
  /propertyapi/v1.0.0/assessment/detail:
    get:
      summary: Assessment detail for a property
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Assessment detail data
          content:
            application/json:
              schema:
                description: AssessmentDetailResponse
  /propertyapi/v1.0.0/saleshistory/snapshot:
    get:
      summary: Sales history snapshot for a property
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Sales history snapshot data
          content:
            application/json:
              schema:
                description: SaleshistorySnapshotResponse
  /propertyapi/v1.0.0/saleshistory/basichistory:
    get:
      summary: Basic deed + mortgage history for a property
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Basic deed + mortgage history data
          content:
            application/json:
              schema:
                description: SaleshistoryBasicResponse
  /propertyapi/v1.0.0/saleshistory/expandedhistory:
    get:
      summary: Expanded deed + mortgage + preforeclosure for a property
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Expanded deed + mortgage + preforeclosure data
          content:
            application/json:
              schema:
                description: SaleshistoryExpandedResponse
  /propertyapi/v1.0.0/saleshistory/detail:
    get:
      summary: Sale history detail for a property
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Sale history detail data
          content:
            application/json:
              schema:
                description: SaleshistoryDetailResponse
  /propertyapi/v1.0.0/sale/detail:
    get:
      summary: Last sale for a property address or ID fallback
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: Last sale data
          content:
            application/json:
              schema:
                description: SaleDetailResponse
  /propertyapi/v1.0.0/sale/snapshot:
    get:
      summary: Sale info for a geography or fallback from address => geoIdV4 + dateRange
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: attomid
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
        - schema:
            type: string
          required: false
          name: geoIdV4
          in: query
        - schema:
            type: string
          required: true
          name: startsalesearchdate
          in: query
        - schema:
            type: string
          required: true
          name: endsalesearchdate
          in: query
      responses:
        "200":
          description: Sale info data
          content:
            application/json:
              schema:
                description: SaleSnapshotResponse
  /propertyapi/v1.0.0/allevents/detail:
    get:
      summary: All event detail for a property. If no id, fallback from address =>
        attomid => id
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: id
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: All event detail data
          content:
            application/json:
              schema:
                description: AlleventsDetailResponse
  /propertyapi/v1.0.0/allevents/snapshot:
    get:
      summary: All event snapshot for a property. If no id, fallback from address =>
        attomid => id
      tags:
        - Property
      parameters:
        - schema:
            type: string
          required: false
          name: id
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: All event snapshot data
          content:
            application/json:
              schema:
                description: AlleventsSnapshotResponse
  /v4/area/boundary/detail:
    get:
      summary: Returns boundaries for the specified geoIdV4 (fallback if no geoIdV4 =>
        address => property => geoIdV4).
      tags:
        - Area
      parameters:
        - schema:
            type: string
          required: false
          name: geoIdV4
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
        - schema:
            type: string
          required: false
          name: format
          in: query
      responses:
        "200":
          description: Boundaries data
          content:
            application/json:
              schema:
                description: AreaBoundaryDetailResponse
  /v4/school/district:
    get:
      summary: School district for DB geoIdV4 or fallback from address => property =>
        DB code
      tags:
        - School
      parameters:
        - schema:
            type: string
          required: false
          name: geoIdV4
          in: query
        - schema:
            type: string
          required: false
          name: address1
          in: query
        - schema:
            type: string
          required: false
          name: address2
          in: query
      responses:
        "200":
          description: School district data
          content:
            application/json:
              schema:
                description: SchoolDistrictResponse
webhooks: {}
